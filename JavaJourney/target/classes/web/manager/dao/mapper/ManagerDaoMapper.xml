<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="web.manager.dao.face.ManagerDao">

	<select id="selectCntAll" resultType="int" parameterType="hashmap">
		select count(*) from member
		<where>
			<if test='search != "N" '>
				AND upper(USERNICK) LIKE '%'||upper(#{search})||'%'
			</if>
		</where>
	</select>

	<select id="selectAllUser" resultType="Member" parameterType="Paging">
    SELECT * 
    FROM (
        SELECT rownum rnum, M.*
        FROM (
            SELECT userNo, userId, userPw, userNick, userEmail, userName,
                   userPhone, userPostcode, userAdd1, userAdd2, businessNo,
                   status
            FROM member
            ORDER BY userNo DESC
        ) M
    ) member
    <where>
        rnum BETWEEN #{startNo} AND #{endNo}
    </where>
	</select>
	
	<select id="selectByUserNoForStatus" resultType="boolean" parameterType="int">
		SELECT count(*)
		FROM BEANSUB
		WHERE userno = #{userNo}
		AND NONSUB = 'N'
	</select>
	
	<update id="updateUserStatus" parameterType="int">
		UPDATE MEMBER
   	 	SET STATUS = 
   	 		CASE
   	 			WHEN STATUS = 'Y' THEN 'N' 
   	 			END
		WHERE USERNO = #{userNo}
	</update>
	
	<update id="updateUserStatusReturn" parameterType="int">
	UPDATE MEMBER
   	 	SET STATUS = 
   	 		CASE 
   	 			WHEN STATUS = 'N' THEN 'Y'
   	 			END
		WHERE USERNO = #{userNo}
	</update>
	
	<select id="selectCntBeanSubAll" resultType="int" parameterType="hashmap">
		select count(*)
		from beansub b, MEMBER m
		<!-- 이부분 수정해야함 구독관리 -->
		<where>
			 b.USERNO = m.USERNO
			<if test='search != "N" '>
				AND upper(userName) LIKE '%'||upper(#{search})||'%'
			</if>
		</where>
	</select>
	
	<select id="selectAllBeanSubUser" parameterType="Paging" resultType="BeanSub">
		SELECT * 
    	FROM (
       	 SELECT rownum rnum, B.*
       	 FROM (
       	     SELECT B.SUBNO, B.USERNO AS BEANSUB_USERNO, B.BEANNO, B.GRAM,
				B.PRICE, B.GRIND, B.SUBSTARTDATE,
				B.SUBTIME, B.NONSUB, M.USERNO AS MEMBER_USERNO, M.USERADD1,
				M.USERADD2, M.USERNAME, B2.BEANNAME 
				FROM BEANSUB B, "MEMBER" M, BEAN B2
		     <where>
       	     	AND B.USERNO = M.USERNO
       	     	AND B.BEANNO = B2.BEANNO
       	     </where>
       	     ORDER BY B.SUBNO DESC
      	  ) B
 	   ) beansub
    <where>
        rnum BETWEEN #{startNo} AND #{endNo}
    </where>
	</select>
	
	<select id="selectBeanSubCancelByBeanSub" resultType="boolean" parameterType="int">
		SELECT count(*)
		FROM BEANSUB
		WHERE SUBNO = #{subNo}
		AND NONSUB = 'N'
	</select>
	
	<update id="subNoSubCancenBySubNoForUpdate" parameterType="int">
		UPDATE BEANSUB
		SET NONSUB = 
			CASE
				WHEN NONSUB = 'N' THEN 'Y'
			END
			WHERE SUBNO = #{subNo}
	</update>
	
	<update id="subNoSubReturnBySubNoForUpdate" parameterType="int">
		UPDATE BEANSUB
		SET NONSUB = 'N'
		WHERE SUBNO = #{subNo} AND NONSUB = 'Y'
	</update>
	
	<select id="selectByUserNick" parameterType="hashmap" resultType="Member">
		SELECT 
			userNo, userId, userPw, userNick, userEmail, userName,
            userPhone, userPostcode, userAdd1, userAdd2, businessNo,
            status
		FROM (
			SELECT rownum r,a.* FROM(
				SELECT * FROM MEMBER 
				WHERE upper(USERNICK) LIKE '%'||upper(#{search})||'%'
				ORDER BY USERNO DESC
				)a
			)
		WHERE r BETWEEN #{paging.startNo} AND #{paging.endNo}	
	</select>
	
	<select id="selectsubuserByUserNick" parameterType="hashmap" resultType="BeanSub">
		SELECT * 
    	FROM (
	       	 SELECT rownum r, B.*
	       	 FROM (
	       	     SELECT B.SUBNO, B.USERNO AS BEANSUB_USERNO, B.BEANNO, B.GRAM,
					B.PRICE, B.GRIND, B.SUBSTARTDATE, B.SUBENDDATE,
					B.SUBTIME, B.NONSUB, M.USERNO AS MEMBER_USERNO, M.USERADD1,
					M.USERADD2, M.USERNAME, B2.BEANNAME 
					FROM BEANSUB B, "MEMBER" M, BEAN B2
			     <where>
			     	AND upper(userName) LIKE '%'||upper(#{search})||'%'
	       	     	AND B.USERNO = M.USERNO
	       	     	AND B.BEANNO = B2.BEANNO
	       	     </where>
	       	     ORDER BY B.SUBNO DESC
	      	  ) B
	 	   ) beansub
   		 <where>
        r BETWEEN #{paging.startNo} AND #{paging.endNo}
    	</where>
	</select>
	
	
	
</mapper>