<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="web.manager.dao.face.ManagerDao">

	<select id="selectCntAll" resultType="int">
		select count(*) from member
	</select>

	<select id="selectAllUser" resultType="Member" parameterType="Paging">
    SELECT * 
    FROM (
        SELECT rownum rnum, M.*
        FROM (
            SELECT userNo, userId, userPw, userNick, userEmail, userName,
                   userPhone, userPostcode, userAdd1, userAdd2, businessNo,
                   status
            FROM member
            ORDER BY userNo DESC
        ) M
    ) member
    <where>
        rnum BETWEEN #{startNo} AND #{endNo}
    </where>
	</select>
	
	<select id="selectByUserNoForStatus" resultType="boolean" parameterType="int">
<!--     SELECT CASE WHEN EXISTS ( -->
<!--         SELECT 1 -->
<!--         FROM BEANSUB -->
<!--         WHERE userno = #{userNo} -->
<!--     ) THEN 1 ELSE 0 END -->
<!--     FROM DUAL -->
			SELECT 
				CASE 
					WHEN STATUS = 'N' THEN 'TRUE'
					ELSE 'FALSE'
				END AS RESULT
			FROM MEMBER
			WHERE USERNO = #{subNo}
	</select>
	
	<update id="updateUserStatus" parameterType="int">
		UPDATE MEMBER
   	 	SET STATUS = 
      	  CASE 
      	      WHEN STATUS = 'Y' THEN 'N'
      	      WHEN STATUS = 'N' THEN 'Y'
     	   END
		<where>
			USERNO = #{userNo}
		</where>
	</update>
	
	<select id="selectCntBeanSubAll" resultType="int">
		select count(*) from beansub
	</select>
	
	<select id="selectAllBeanSubUser" parameterType="Paging" resultType="BeanSub">
		SELECT * 
    	FROM (
       	 SELECT rownum rnum, B.*
       	 FROM (
       	     SELECT B.SUBNO, B.USERNO AS BEANSUB_USERNO, B.BEANNO, B.GRAM,
				B.PRICE, B.GRIND, B.SUBSTARTDATE, B.SUBENDDATE,
				B.SUBTIME, B.NONSUB, M.USERNO AS MEMBER_USERNO, M.USERADD1,
				M.USERADD2, M.USERNAME, B2.BEANNAME 
				FROM BEANSUB B, "MEMBER" M, BEAN B2
		     <where>
       	     	AND B.USERNO = M.USERNO
       	     	AND B.BEANNO = B2.BEANNO
       	     </where>
       	     ORDER BY B.SUBNO DESC
      	  ) B
 	   ) beansub
    <where>
        rnum BETWEEN #{startNo} AND #{endNo}
    </where>
	</select>
	
<!-- 	<select id="selectBeanSubCancelByBeanSub" resultType="boolean" parameterType="int"> -->
<!-- 			SELECT  -->
<!-- 				CASE  -->
<!-- 					WHEN NONSUB = 'Y' THEN 'N' -->
<!-- 					WHEN NONSUB = 'N' THEN 'Y' -->
<!-- 				END  -->
<!-- 			FROM BEANSUB -->
<!-- 			WHERE SUBNO = #{subNo} -->
<!-- 	</select> -->
	
	<update id="subNoSubCancenBySubNoForUpdate" parameterType="int">
		UPDATE BEANSUB
		SET NONSUB =
			CASE
				WHEN NONSUB = 'Y' THEN 'N'
				WHEN NONSUB = 'N' THEN 'Y'
			END
			WHERE SUBNO = #{subNo}
	</update>
	
	<select id="selectByUserNick" parameterType="hashmap" resultType="Member">
		SELECT 
			userNo, userId, userPw, userNick, userEmail, userName,
            userPhone, userPostcode, userAdd1, userAdd2, businessNo,
            status
		FROM (
			SELECT rownum r,a.* FROM(
				SELECT * FROM MEMBER 
				WHERE upper(USERNICK) LIKE '%'||upper(#{search})||'%'
				ORDER BY USERNO DESC
				)a
			)
		WHERE r BETWEEN #{paging.startNo} AND #{paging.endNo}	
	</select>
	
	<select id="selectsubuserByUserNick" parameterType="hashmap" resultType="BeanSub">
		SELECT * 
    	FROM (
	       	 SELECT rownum r, B.*
	       	 FROM (
	       	     SELECT B.SUBNO, B.USERNO AS BEANSUB_USERNO, B.BEANNO, B.GRAM,
					B.PRICE, B.GRIND, B.SUBSTARTDATE, B.SUBENDDATE,
					B.SUBTIME, B.NONSUB, M.USERNO AS MEMBER_USERNO, M.USERADD1,
					M.USERADD2, M.USERNAME, B2.BEANNAME 
					FROM BEANSUB B, "MEMBER" M, BEAN B2
			     <where>
			     	AND upper(USERNICK) LIKE '%'||upper(#{search})||'%'
	       	     	AND B.USERNO = M.USERNO
	       	     	AND B.BEANNO = B2.BEANNO
	       	     </where>
	       	     ORDER BY B.SUBNO DESC
	      	  ) B
	 	   ) beansub
   		 <where>
        r BETWEEN #{paging.startNo} AND #{paging.endNo}
    	</where>
	</select>

	
</mapper>