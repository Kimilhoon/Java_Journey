<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="web.dao.face.BeanDao">
	
	<select id="selectBeanTop" resultType="Bean">
<!-- 		SELECT * FROM ( -->
<!-- 			SELECT rowNum rNum, B.* FROM ( -->
<!-- 				SELECT  -->
<!-- 					b.beanNo, i.beanImgNo, beanName, origin, beanComm, beanInfo, beanPrice, businessNo, -->
<!-- 					beanOriginname, beanStoredname, beanImgSize, bs.gram, -->
<!-- 					(SELECT COUNT(br.revNo) FROM beanRev br WHERE br.beanNo = b.beanNo) AS reviewCount, -->
<!-- 					(SELECT TRUNC( avg(revStarPoint)) FROM beanRev br WHERE br.beanNo = b.beanNo ) AS avgRevStarPoint -->
<!-- 				FROM bean b -->
<!-- 				LEFT JOIN beanImg i ON b.beanImgNo = i.beanImgNo -->
<!-- 				LEFT JOIN beanSub bs ON b.beanNo = bs.beanNo -->
<!-- 				ORDER BY reviewCount DESC -->
<!-- 			) B -->
<!-- 		) -->
<!-- 		WHERE rNum &lt;= 3 -->
		
		SELECT m.*,n.*,bi.* FROM (
	SELECT rownum rnum ,b.beanno,revcnt.reviewCount, revcnt.avgRevStarPoint FROM (
		SELECT a.beanno,a.reviewCount, a.avgRevStarPoint FROM (
			SELECT qq.BEANNO ,count(*) over(PARTITION BY qq.BEANNO) reviewCount ,round(avg(revstarpoint) over(PARTITION  BY qq.BEANNO),2) avgRevStarPoint FROM BEAN qq ,BEANREV ww 
			WHERE qq.BEANNO = ww.BEANNO) a
		GROUP BY a.beanno,a.reviewCount, a.avgRevStarPoint
        ORDER BY COUNT(*) DESC, avgRevStarPoint DESC
	)revcnt , bean b
	WHERE b.BEANNO = revcnt.beanno
	
)m, bean n, BEANIMG bi
WHERE rnum BETWEEN 1 AND 3
AND m.beanno = n.beanno
AND n.BEANIMGNO = bi.BEANIMGNO 
ORDER BY rnum 
		
	</select>
	
	<select id="selectBeanCount" resultType="Bean">
		SELECT count(beanNo) as beanCount FROM bean
	</select>
	
	<!-- /bean/best -->
	<!-- ====================================================================================================== -->

	<select id="selectCntAll" parameterType="hashmap" resultType="int">
		SELECT	count(*)
		FROM	bean b
		<if test='cupnote != null and cupnote != "N"'>
		LEFT JOIN beanTaste bt ON b.beanNo = bt.beanNo
    	LEFT JOIN cupNote c ON bt.cupNoteNo = c.cupNoteNo
    	</if>
		<where>
			<if test='cupnote != null and cupnote != "N"'>
			AND		c.cupNoteName = #{ cupnote }
			</if>
			<if test='keyword != null and keyword != "N"'>
			AND		upper(b.beanName) LIKE '%'||upper(#{keyword})||'%' 
			</if>
		</where>
	</select>
	
	
	<select id="selectAll" parameterType="hashmap" resultType="Bean">
		SELECT * FROM (
			SELECT rowNum rNum, B.* FROM (
				SELECT 
					b.beanNo, i.beanImgNo, beanName, origin, 
					beanComm, beanInfo, beanPrice, businessNo,
					beanOriginname, beanStoredname, beanImgSize,
					status,
					<if test='cupnote != "N"'>
					c.cupNoteNo, c.cupNoteName,
					</if>
					(SELECT COUNT(br.revNo) FROM beanrev br WHERE br.beanNo = b.beanNo) AS reviewCount
<!-- 					(SELECT LISTAGG(cupNoteName, ', ') WITHIN GROUP (ORDER BY cupNoteName) AS cupNoteNames -->
<!-- 						FROM ( -->
<!-- 							SELECT DISTINCT c.cupNoteName -->
<!-- 							FROM cupNote c -->
<!-- 							INNER JOIN beanTaste bt ON c.cupNoteNo = bt.cupNoteNo -->
<!-- 							WHERE bt.beanNo = b.beanNo -->
<!-- 						) -->
<!-- 					) AS cupNoteNames -->
<!-- 					(select count(*) from beanrevcomm where b.beanNo=#{beanNo}) as reviewCount -->
				FROM bean b
				<if test='cupnote != "N"'>
				LEFT JOIN beanTaste bt ON b.beanNo = bt.beanNo
				LEFT JOIN cupNote c ON bt.cupNoteNo = c.cupNoteNo
				</if>
				LEFT JOIN beanImg i ON b.beanImgNo = i.beanImgNo
				<where>
				<if test='cupnote != "N"'>
				AND		c.cupNoteName = #{ cupnote }
				</if>
				<if test='keyword != "N"'>
				AND		upper(beanName) LIKE '%'||upper(#{keyword})||'%' 
				</if>
				</where>
				ORDER BY beanNo DESC
			) B
		) bean
		WHERE rNum BETWEEN #{ paging.startNo } AND #{ paging.endNo }
	</select>  
	
	<!-- /bean/all -->
	<!-- ====================================================================================================== -->
	
	<select id="selectByBeanNo" parameterType="Bean" resultType="Bean">
		SELECT 
				b.beanNo, i.beanImgNo, beanName, origin, 
				beanComm, beanInfo, beanPrice, businessNo,
				beanOriginname, beanStoredname, beanImgSize,
				status
		FROM	bean b
		INNER JOIN beanImg i ON b.beanImgNo = i.beanImgNo
		<where>
		AND		b.beanNo = #{ beanNo }
		</where>
	</select>
	
	<select id="selectStarPoint" parameterType="Bean" resultType="BeanRev">
		SELECT TRUNC(avg (revStarPoint) ) AS avgRevStarPoint, beanNo
		FROM	beanRev
		<where>
		AND		beanNo = #{ beanNo }
		</where>
		GROUP BY beanNo
	</select>
	
	<select id="selectByUserId" parameterType="String" resultType="Member">
		SELECT	userNo
		FROM	member
		<where>
		AND		userId = #{ userId }
		</where>
	</select>
	
	<select id="selectAllRev" parameterType="Bean" resultType="BeanRev">
		SELECT
				revNo, b.beanNo, b.subNo, b.userNo, revCont, 
				revHit, revDate, revStarPoint,
				m.userNick
		FROM 	beanRev b
		LEFT JOIN member m ON b.userNo = m.userNo
		<where>
		AND		beanNo = ${ beanNo }
		</where>
	</select>

<!-- 	<insert id="insertWish" parameterType="BeanWish"> -->
<!-- 		<selectKey order="BEFORE" resultType="int" keyProperty="beanWishNo"> -->
<!-- 			SELECT beanWishNo_seq.nextval FROM dual -->
<!-- 		</selectKey> -->
<!-- 		INSERT INTO beanWish( beanWishNo, beanNo, userNo ) -->
<!-- 		VALUES ( #{ beanWishNo }, #{ beanNo }, #{ userNo } ) -->
<!-- 	</insert> -->

	<insert id="addWish" parameterType="map">
		<selectKey order="BEFORE" resultType="int" keyProperty="beanWishNo">
			SELECT beanWishNo_seq.nextval FROM dual
		</selectKey>
		INSERT INTO beanWish( beanWishNo, beanNo, userNo )
		VALUES ( #{ beanWishNo }, #{ beanNo }, #{ userNo } )
	</insert>
	
	<delete id="removeWish" parameterType="map">
		DELETE 	beanWish
		<where>
		AND		beanNo = #{ beanNo }
		AND		userNo = #{ userNo }
		</where>
	</delete>
	
	<select id="countUserWish" parameterType="map" resultType="int">
		SELECT COUNT(*) 
		FROM beanWish 
		WHERE beanNo = #{beanNo} AND userNo = #{userNo}
    </select>

	<!-- /bean/info -->
	<!-- ====================================================================================================== -->

	<select id="selectBeanByBeanNo" parameterType="Bean" resultType="Bean">
		SELECT
				beanno, beanname, origin, beanprice
		FROM 	bean
		<where>
		AND		beanNo = #{ beanNo }
		</where>
	</select>
	 
	<select id="selectMemberByUserId" parameterType="String" resultType="Member">
		SELECT
				userno, userid, userpw, usernick, 
				useremail, username, userphone, 
				userpostcode, useradd1, useradd2
		FROM 	member
		<where>
		AND		userId = #{ userId }
		</where>
	</select>
	
	<insert id="beanSubscribe" parameterType="BeanSub">
		<selectKey order="BEFORE" resultType="int" keyProperty="subNo">
			SELECT beanWishNo_seq.nextval FROM dual
		</selectKey>
		INSERT INTO beanSub ( subno, userno, beanno, gram, price, grind, substartdate, subenddate, subtime, nonsub )
		VALUES ( #{ subNo }, #{ userNo }, #{ beanNo }, #{ gram }, #{ price }, #{ grind }, SYSDATE, NULL, #{ subTime }, 'N' )
	</insert>
	
	<!-- /bean/sub -->
	<!-- ====================================================================================================== -->
	
</mapper>